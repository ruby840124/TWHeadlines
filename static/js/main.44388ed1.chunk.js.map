{"version":3,"sources":["Newscontent.js","Main.js","serviceWorker.js","index.js"],"names":["Newscontent","props","onScrollHandle","event","list","document","getElementById","window","scrollY","innerHeight","clientHeight","offsetTop","state","page","categoryValue","fetchAPI","fetchAllAPI","articles","lastCategoryValue","val","change","category","this","fetch","then","response","json","data","map","push","setState","sort","a","b","Date","parse","publishedAt","addEventListener","removeEventListener","clearInterval","timerID","timeArray","currentDate","JSON","stringify","MM","getMonth","substr","dd","getDate","h","getHours","m","getMinutes","s","getSeconds","Time","getFullYear","listItems","index","className","key","style","width","textAlign","src","urlToImage","padding","height","href","url","color","fontSize","title","description","author","id","React","Component","Main","handleChoose","allData","target","value","display","alignItems","flexDirection","icon","faThumbsUp","onChange","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44388ed1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Newscontent extends React.Component{\r\n  constructor(props) {\r\n        super(props);\r\n        this.state={articles:[],lastCategoryValue:\"\",page:0};\r\n  }\r\n\r\n  //擷取一類的API數據\r\n  fetchAPI(val,change){\r\n    const category = val;\r\n    let page = this.state.page+1;\r\n    let articles = this.state.articles;\r\n    if(change){\r\n      page = 1;\r\n      articles=[];\r\n    }\r\n    const API = 'https://newsapi.org/v2/top-headlines?country=tw&';\r\n    const DEFAULT_QUERY ='category='+val;\r\n    const APIkey = '&apiKey=27539d215b7745149d29a69402f930a6';\r\n    fetch(API + DEFAULT_QUERY+APIkey+\"&page=\"+page)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      data.articles.map((val) => {\r\n        val.category = category;\r\n        articles.push(val);\r\n      });\r\n      this.setState({articles:articles,page:page});\r\n    })\r\n  }\r\n\r\n  //統整全部的API數據\r\n  fetchAllAPI(change){\r\n    let page = this.state.page+1;\r\n    let articles = this.state.articles;\r\n    if(change){\r\n      page = 1;\r\n      articles=[];\r\n    }\r\n    const categoryArray = [\"entertainment\",\"science\",\"sports\",\"business\"];\r\n    categoryArray.map((val) =>{\r\n      const category = val;\r\n      const API = 'https://newsapi.org/v2/top-headlines?country=tw&';\r\n      const DEFAULT_QUERY ='category='+val;\r\n      const APIkey = '&apiKey=27539d215b7745149d29a69402f930a6';\r\n      fetch(API + DEFAULT_QUERY+APIkey+\"&page=\"+page+\"&pagesize=5\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        data.articles.map((val) =>{\r\n          val.category = category;\r\n          articles.push(val);\r\n        })\r\n        //時間順序排列(最新到最舊)\r\n        articles.sort(function(a,b){ \r\n          return Date.parse(b.publishedAt) - Date.parse(a.publishedAt);\r\n        });\r\n        this.setState({articles:articles,page:page});\r\n      });\r\n    })\r\n  }\r\n\r\n  //執行於元件第一次render到畫面的時間點\r\n  componentDidMount() {\r\n    this.fetchAPI(this.props.categoryValue); //第一次render\r\n    this.setState({lastCategoryValue:this.props.categoryValue});\r\n    window.addEventListener('scroll', this.onScrollHandle, true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.onScrollHandle);\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  onScrollHandle = event => {\r\n    const list = document.getElementById('list');\r\n    const change = false; //跟滾輪的fetch API區別\r\n    if (window.scrollY + window.innerHeight === list.clientHeight + list.offsetTop+10) {\r\n      if(this.state.page<5){ //API頁面只有到4頁，超過沒有回傳值\r\n        (this.props.categoryValue!=\"all\"?this.fetchAPI(this.props.categoryValue,change):this.fetchAllAPI(change));\r\n      }\r\n\r\n      }\r\n    }\r\n  \r\n\r\n  //執行於re-render更新完後的時間點\r\n  componentDidUpdate(){\r\n    if(this.state.lastCategoryValue!=this.props.categoryValue){\r\n      const change = true; //跟滾輪的fetch API區別\r\n      (this.props.categoryValue!=\"all\"?this.fetchAPI(this.props.categoryValue,change):this.fetchAllAPI(change));\r\n      this.setState({lastCategoryValue:this.props.categoryValue});\r\n    }}\r\n\r\n  render() {\r\n    const  articles  = this.state.articles;\r\n    let timeArray =[];\r\n    articles.map(function(val) { \r\n        var currentDate = val.publishedAt; \r\n        currentDate = JSON.stringify(currentDate);\r\n        currentDate = new Date(JSON.parse(currentDate));\r\n        //時間轉成台灣時間\r\n        var MM = ('0'+ (currentDate.getMonth()+1)).substr(-2);\r\n        var dd = ('0'+ currentDate.getDate()).substr(-2);\r\n        var h = ('0'+ currentDate.getHours()).substr(-2);\r\n        var m = ('0'+ currentDate.getMinutes()).substr(-2);\r\n        var s = ('0'+ currentDate.getSeconds()).substr(-2);\r\n        let Time = currentDate.getFullYear()+\"年\"+MM+\"月\"+dd+\"日\";\r\n        Time = Time + h+\":\"+m+\":\"+s;\r\n        timeArray.push(Time);\r\n    });\r\n    const listItems = articles.map((val,index) =>\r\n    <div className=\"list_css\" key={index}>\r\n      <div style={{width:\"40%\",textAlign:\"center\"}}>\r\n        <img  src={val.urlToImage} style={{padding:\"0.5vh\"}} width=\"70%\" height=\"70%\"/>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div style={{textAlign:\"center\"}}>\r\n          <a href={val.url} style={{color:\"black\",fontSize:\"1.3vw\"}} >{val.title}</a>\r\n        </div><br/>\r\n        <div>{val.description}</div><br/>\r\n        <div style={{color:\"#CA8EFF\",textAlign:\"right\"}}>({val.category})</div>\r\n        <div style={{color:\"#FF7575\",textAlign:\"right\"}}>{val.author!=null?val.author+\" 報導\" :''}</div>\r\n        <div style={{color:\"#0066CC\",textAlign:\"right\"}}>{timeArray[index]}</div>\r\n      </div>\r\n    </div>\r\n    );\r\n    return (\r\n      <div id=\"list\">\r\n        {listItems}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Newscontent;","import React from 'react';\nimport Newscontent  from './Newscontent';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\n\nclass Main extends React.Component{\n  //建構子\n  constructor(props) {\n    super(props);\n    this.state={categoryValue:\"entertainment\"};\n  }\n\n\n  //選擇不同類輸出不同類擷取結果\n  handleChoose = event => {\n    const allData = this.state.allData;\n    if(event.target.value==\"entertainment\"){\n        this.setState({categoryValue:\"entertainment\"});\n    }else if(event.target.value==\"science\"){\n        this.setState({categoryValue:\"science\"});\n    }else if(event.target.value==\"sports\"){\n        this.setState({categoryValue:\"sports\"});\n    }else if(event.target.value==\"business\"){\n        this.setState({categoryValue:\"business\"});\n    }else{\n        this.setState({categoryValue:\"all\"});\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"MainBlock\">\n        <div id=\"topBlock\">\n          <div className=\"topText\">Taiwan Top Headlines!</div>\n        </div>\n        <div style={{display:\"flex\", alignItems:\"center\",flexDirection:\"column\"}}>\n          <div style={{display:\"flex\",padding:\"2.5vh\"}}>\n            <FontAwesomeIcon icon={faThumbsUp} style={{fontSize:\"1.5vw\"}}/>&nbsp;\n            <div style={{color:\"#FF9797\",fontSize:\"1.5vw\"}}>請選擇新聞類別:&nbsp;</div>\n            <div className=\"box\">\n              <select onChange={this.handleChoose}> \n                <option value=\"entertainment\">entertainment</option>\n　              <option value=\"science\">science</option>\n　              <option value=\"sports\">sports</option>\n                <option value=\"business\">business</option>\n                <option value=\"all\">all</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <Newscontent categoryValue={this.state.categoryValue}/>\n      <div>\n      </div>\n  </div>\n    )\n  }\n}\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}